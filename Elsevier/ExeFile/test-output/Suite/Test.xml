<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="COMPND-DTP-204" name="Test" tests="2" failures="0" timestamp="2 Jan 2020 07:52:23 GMT" time="0.131" errors="0">
  <testcase name="@BeforeMethod precondition" time="0.0" classname="Script.Loginscript">
    <failure type="java.lang.IllegalStateException" message="The driver executable does not exist: C:\Users\30346.vendor\git\ElsevierSite\Elsevier\ExeFile\.\ExeFile\chromedriver.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: C:\Users\30346.vendor\git\ElsevierSite\Elsevier\ExeFile\.\ExeFile\chromedriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:146)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:141)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:35)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:159)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:355)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:94)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
	at Generic.elsevier.com.BrowserFactory.launch(BrowserFactory.java:17)
	at Generic.elsevier.com.baseLib.precondition(baseLib.java:18)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
... Removed 18 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod precondition -->
  <testcase name="@AfterMethod postcondition" time="0.0" classname="Script.Loginscript">
    <skipped/>
  </testcase> <!-- @AfterMethod postcondition -->
  <testcase name="@BeforeMethod precondition" time="0.0" classname="Script.Loginscript">
    <skipped/>
  </testcase> <!-- @BeforeMethod precondition -->
  <testcase name="@AfterMethod postcondition" time="0.0" classname="Script.Loginscript">
    <skipped/>
  </testcase> <!-- @AfterMethod postcondition -->
  <testcase name="validLogin" time="0.0" classname="Script.Loginscript">
    <skipped/>
  </testcase> <!-- validLogin -->
  <testcase name="invalidLogin" time="0.0" classname="Script.Loginscript">
    <skipped/>
  </testcase> <!-- invalidLogin -->
</testsuite> <!-- Test -->
