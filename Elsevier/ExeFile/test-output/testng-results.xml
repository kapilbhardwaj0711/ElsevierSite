<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="0" total="2" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="131" started-at="2020-01-02T07:52:23Z" finished-at="2020-01-02T07:52:23Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="131" started-at="2020-01-02T07:52:23Z" finished-at="2020-01-02T07:52:23Z">
      <class name="Script.Loginscript">
        <test-method status="FAIL" signature="precondition(java.lang.String, java.lang.String)[pri:0, instance:Script.Loginscript@3ab39c39]" name="precondition" is-config="true" duration-ms="0" started-at="2020-01-02T13:22:23Z" finished-at="2020-01-02T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://www.store.elsevierhealth.com/asia/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: C:\Users\30346.vendor\git\ElsevierSite\Elsevier\ExeFile\.\ExeFile\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: C:\Users\30346.vendor\git\ElsevierSite\Elsevier\ExeFile\.\ExeFile\chromedriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:146)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:141)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:35)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:159)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:355)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:94)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
	at Generic.elsevier.com.BrowserFactory.launch(BrowserFactory.java:17)
	at Generic.elsevier.com.baseLib.precondition(baseLib.java:18)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:589)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- precondition -->
        <test-method status="SKIP" signature="invalidLogin()[pri:2, instance:Script.Loginscript@3ab39c39]" name="invalidLogin" duration-ms="0" started-at="2020-01-02T13:22:23Z" finished-at="2020-01-02T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLogin -->
        <test-method status="SKIP" signature="postcondition()[pri:0, instance:Script.Loginscript@3ab39c39]" name="postcondition" is-config="true" duration-ms="0" started-at="2020-01-02T13:22:23Z" finished-at="2020-01-02T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postcondition -->
        <test-method status="SKIP" signature="precondition(java.lang.String, java.lang.String)[pri:0, instance:Script.Loginscript@3ab39c39]" name="precondition" is-config="true" duration-ms="0" started-at="2020-01-02T13:22:23Z" finished-at="2020-01-02T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- precondition -->
        <test-method status="SKIP" signature="validLogin()[pri:1, instance:Script.Loginscript@3ab39c39]" name="validLogin" duration-ms="0" started-at="2020-01-02T13:22:23Z" finished-at="2020-01-02T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLogin -->
        <test-method status="SKIP" signature="postcondition()[pri:0, instance:Script.Loginscript@3ab39c39]" name="postcondition" is-config="true" duration-ms="0" started-at="2020-01-02T13:22:23Z" finished-at="2020-01-02T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postcondition -->
      </class> <!-- Script.Loginscript -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
